["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$blah.transforms","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$float32",["^ ","~:meta",["^ ","~:file","/Users/brian/projects/blah/src/blah/transforms.cljs","~:line",18,"~:column",3,"~:end-line",18,"~:end-column",10,"~:doc","Converts the raw JS message into a sequence of sample sequences containing float32 values. Each sample sequence represents an input channel"],"^5","~$blah.transforms/float32","^>","/Users/brian/projects/blah/src/blah/transforms.cljs","^B",10,"^@",1,"^?",16,"^A",18,"~:tag","~$function","^C","Converts the raw JS message into a sequence of sample sequences containing float32 values. Each sample sequence represents an input channel"],"~$pcm16",["^ ","^=",["^ ","^>","/Users/brian/projects/blah/src/blah/transforms.cljs","^?",25,"^@",3,"^A",25,"^B",8,"^C","Converts the raw JS message into a sequence of sample sequences containing 16 bit integers"],"^5","~$blah.transforms/pcm16","^>","/Users/brian/projects/blah/src/blah/transforms.cljs","^B",8,"^@",1,"^?",23,"^A",25,"^E","^F","^C","Converts the raw JS message into a sequence of sample sequences containing 16 bit integers"],"~$frames",["^ ","^=",["^ ","^>","/Users/brian/projects/blah/src/blah/transforms.cljs","^?",37,"^@",3,"^A",37,"^B",9,"^C","Converts a sequence of sample sequences into a sequence of sample frames with each frame containing a sample from each input channel."],"^5","~$blah.transforms/frames","^>","/Users/brian/projects/blah/src/blah/transforms.cljs","^B",9,"^@",1,"^?",35,"^A",37,"^E","^F","^C","Converts a sequence of sample sequences into a sequence of sample frames with each frame containing a sample from each input channel."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^C","Contains useful transforms for data received on a blah session.\n   \n   These xforms can be applied when starting a session via blah.core/listen.\n   \n   The default shape of audio data is a js array of js Float32Array types. Each Float32Array\n   contains samples from an input channel. The structure of this collection is\n   #js [float-32-array-for-input-channel-1,\n        float-32-array-for-input-channel-2,\n        ...,\n        float-32-array-input-channel-n]\n   \n   Transforms can be used to convert this js structure into something a little friendlier\n   for the average Clojurist."]