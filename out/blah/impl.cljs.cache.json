["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$MediaDevices",["^ ","~$prototype",["^ ","~$addEventListener",["^ "],"~$removeEventListener",["^ "]]],"~$RESULT",["^ ","^4",["^ ","~$catch",["^ "]]],"~$Function",["^ ","^4",["^ ","~$createObjectURL",["^ "]]]],"~:use-macros",["^ ","~$go","~$cljs.core.async"],"~:excludes",["~#set",[]],"~:name","~$blah.impl","~:imports",null,"~:requires",["^ ","~$transforms","~$blah.transforms","^E","^E","^=","^=","~$async.proto","~$cljs.core.async.impl.protocols","^G","^G"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^=","~$close!","^=","~$chan","^=","~$>!","^=","~$put!","^="],"~:defs",["^ ","~$create-transport",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brian/projects/blah/src/blah/impl.cljs","~:line",121,"~:column",7,"~:end-line",121,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^Y",[["~$context","~$media-stream"]]]]],"~:doc","Create a map consisting of the node, source, context, and media stream"],"^@","~$blah.impl/create-transport","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",23,"~:method-params",["^Y",[["^[","^10"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^U",1,"~:variadic?",false,"^T",121,"~:ret-tag","~$cljs.core/IMap","^V",121,"~:max-fixed-arity",2,"~:fn-var",true,"^X",["^Y",["^Z",["^Y",[["^[","^10"]]]]],"^11","Create a map consisting of the node, source, context, and media stream"],"~$audio-context",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",188,"^U",4,"^V",188,"^W",17,"~:protocol","~$blah.impl/AudioContext","^11","Return an audio context from the session","^X",["^Y",["^Z",["^Y",[["~$session"]]]]]],"^1<","^1=","^@","~$blah.impl/audio-context","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",17,"^13",["^Y",[["^1>"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",187,"^17","~$any","^V",188,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1>"]]]]],"^11","Return an audio context from the session"],"~$input->constraint",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",38,"^U",7,"^V",38,"^W",24,"^X",["^Y",["^Z",["^Y",[["~$input"]]]]]],"^@","~$blah.impl/input->constraint","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",24,"^13",["^Y",[["^1B"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",38,"^17","~$object","^V",38,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1B"]]]]]],"~$Session",["^ ","~:num-fields",2,"~:protocols",["^?",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","^1=","~$cljs.core.async.impl.protocols/Channel","~$cljs.core/ICounted","~$cljs.core.async.impl.protocols/ReadPort","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^18","~$cljs.core/ILookup"]],"^@","~$blah.impl/Session","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"~:type",true,"^U",12,"~:internal-ctor",true,"^T",190,"~:record",true,"^V",190,"~:tag","~$function","~:skip-protocol-flag",["^?",["^1H","^1I","^1J","^1K","^1L","^1N","^1P","^1Q","^1R","^1S","^1T","^1U","^1V","^18","^1W"]]],"~$create-context",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",116,"^U",7,"^V",116,"^W",21,"^X",["^Y",["^Z",["^Y",[[]]]]]],"^@","~$blah.impl/create-context","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",21,"^13",["^Y",[[]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",116,"^17",["^?",["~$js/webkitAudioContext","~$js/AudioContext"]],"^V",116,"^19",0,"^1:",true,"^X",["^Y",["^Z",["^Y",[[]]]]]],"~$input-ch",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",61,"^U",7,"^V",61,"^W",15,"^X",["^Y",["^Z",["^Y",[["~$close-ch"],[]]]]],"~:top-fn",["^ ","^16",false,"~:fixed-arity",1,"^19",1,"^13",[["^28"],[]],"^X",["^Y",[["^28"],[]]],"^15",["^Y",[null,null]]]],"^@","~$blah.impl/input-ch","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",15,"^29",["^ ","^16",false,"^2:",1,"^19",1,"^13",[["^28"],[]],"^X",["^Y",[["^28"],[]]],"^15",["^Y",[null,null]]],"^13",[["^28"],[]],"^14",null,"^2:",1,"^15",["^Y",[null,null]],"^U",1,"^16",false,"~:methods",[["^ ","^2:",1,"^16",false,"^20","^1@"],["^ ","^2:",0,"^16",false,"^20","^1@"]],"^T",61,"^V",61,"^19",1,"^1:",true,"^X",["^Y",[["^28"],[]]]],"~$disconnect-transport",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",164,"^U",7,"^V",164,"^W",27,"^X",["^Y",["^Z",["^Y",[[["^ ","~:keys",["~$source","~$node","^10"]]]]]]],"^11","Disconnect the source from the worklet. Also stops audio\n   tracks from the media stream."],"^@","~$blah.impl/disconnect-transport","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",27,"^13",["^Y",[["~$p__2467"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",164,"^17","^1@","^V",164,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[[["^ ","^2>",["^2?","^2@","^10"]]]]]]],"^11","Disconnect the source from the worklet. Also stops audio\n   tracks from the media stream."],"~$processor-js",["^ ","^@","~$blah.impl/processor-js","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",93,"^U",1,"^V",93,"^W",18,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",93,"^U",6,"^V",93,"^W",18],"^20","~$string"],"~$->Session",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^U",12,"^1Z",true,"~:factory","~:positional","^T",190,"^V",190,"^X",["^Y",["^Z",["^Y",[["~$data-ch","^["]]]]],"^11","Positional factory function for blah.impl/Session."],"^@","~$blah.impl/->Session","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^13",["^Y",[["^2I","^["]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^1Z",true,"^16",false,"^2G","^2H","^T",190,"^17","^1X","^V",190,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^2I","^["]]]]],"^11","Positional factory function for blah.impl/Session."],"~$info->input",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",31,"^U",7,"^V",31,"^W",18,"^X",["^Y",["^Z",["^Y",[["~$info"]]]]]],"^@","~$blah.impl/info->input","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",18,"^13",["^Y",[["^2L"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",31,"^17","^18","^V",31,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^2L"]]]]]],"~$connect-transport",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",150,"^U",7,"^V",150,"^W",24,"^X",["^Y",["^Z",["^Y",[[["^ ","^2>",["^2?","^2@","^10"]],"^2I","^28"]]]]],"^11","Begins streaming data over the transport, in this case connecting a media stream to\n   an audio worklet. Data is pushed to the given data channel as it is made available by the worklet."],"^@","~$blah.impl/connect-transport","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",24,"^13",["^Y",[["~$p__2410","^2I","^28"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",150,"^17","^1@","^V",150,"^19",3,"^1:",true,"^X",["^Y",["^Z",["^Y",[[["^ ","^2>",["^2?","^2@","^10"]],"^2I","^28"]]]]],"^11","Begins streaming data over the transport, in this case connecting a media stream to\n   an audio worklet. Data is pushed to the given data channel as it is made available by the worklet."],"~$create-session",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",210,"^U",7,"^V",210,"^W",21,"^X",["^Y",["^Z",["^Y",[["^2I","^["]]]]],"^11","A session behaves like a core.async ReadPort. The only difference\n   is that it also contains a reference to the AudioContext used for listening.\n   This is useful for using an already \"warm\" audio context. This makes it possible\n   to play audio on it without forcing user interaction again (some browsers require\n   a user action before allowing audio within a context)"],"^@","~$blah.impl/create-session","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",21,"^13",["^Y",[["^2I","^["]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",210,"^17","^1X","^V",210,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^2I","^["]]]]],"^11","A session behaves like a core.async ReadPort. The only difference\n   is that it also contains a reference to the AudioContext used for listening.\n   This is useful for using an already \"warm\" audio context. This makes it possible\n   to play audio on it without forcing user interaction again (some browsers require\n   a user action before allowing audio within a context)"],"~$map->Session",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^U",12,"^1Z",true,"^2G","~:map","^T",190,"^V",190,"^X",["^Y",["^Z",["^Y",[["~$G__2628"]]]]],"^11","Factory function for blah.impl/Session, taking a map of keywords to field values."],"^@","~$blah.impl/map->Session","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^13",["^Y",[["^2U"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^1Z",true,"^16",false,"^2G","^2T","^T",190,"^17","^1X","^V",190,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^2U"]]]]],"^11","Factory function for blah.impl/Session, taking a map of keywords to field values."],"~$start-transport",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",172,"^U",7,"^V",172,"^W",22,"^X",["^Y",["^Z",["^Y",[[["~$ok?","~$result"],"^2I","^28"]]]]]],"^@","~$blah.impl/start-transport","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",22,"^13",["^Y",[["~$p__2494","^2I","^28"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",172,"^17","^1@","^V",172,"^19",3,"^1:",true,"^X",["^Y",["^Z",["^Y",[[["^2X","^2Y"],"^2I","^28"]]]]]],"~$AudioContext",["^ ","^R",["^ ","~:protocol-symbol",true,"^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",26,"^U",14,"^T",187,"~:protocol-info",["^ ","^2<",["^ ","^1;",[["^1>"]]]],"^V",187,"~:sigs",["^ ","~:audio-context",["^ ","^@","^1;","^X",["^Y",[["^1>"]]],"^11","Return an audio context from the session"]],"~:jsdoc",["^Y",["@interface"]]],"^31",true,"^@","^1=","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",26,"^U",1,"^T",187,"^32",["^ ","^2<",["^ ","^1;",[["^1>"]]]],"~:info",null,"^V",187,"^20","^1@","^33",["^ ","^34",["^ ","^@","^1;","^X",["^Y",[["^1>"]]],"^11","Return an audio context from the session"]],"~:impls",["^?",["^1X"]],"^35",["^Y",["@interface"]]],"~$start-session",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",219,"^U",7,"^V",219,"^W",20,"^X",["^Y",["^Z",["^Y",[["~$transport","^2I","^28"]]]]]],"^@","~$blah.impl/start-session","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",20,"^13",["^Y",[["^39","^2I","^28"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",219,"^17","^1@","^V",219,"^19",3,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^39","^2I","^28"]]]]]],"~$connect-input",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",44,"^U",7,"^V",44,"^W",20,"^X",["^Y",["^Z",["^Y",[["^1B"]]]]],"^11","Return a promise for getting user media for the given audio input"],"^@","~$blah.impl/connect-input","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",20,"^13",["^Y",[["^1B"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",44,"^17","~$js/Promise","^V",44,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1B"]]]]],"^11","Return a promise for getting user media for the given audio input"],"~$listen",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",228,"^U",7,"^V",228,"^W",13,"^X",["^Y",["^Z",["^Y",[["^1B","~$xform","~$ex-handler"],["^1B","^3?"],["^1B"],[]]]]],"^29",["^ ","^16",false,"^2:",3,"^19",3,"^13",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]],"^X",["^Y",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]]],"^15",["^Y",[null,null,null,null]]]],"^@","~$blah.impl/listen","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",13,"^29",["^ ","^16",false,"^2:",3,"^19",3,"^13",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]],"^X",["^Y",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]]],"^15",["^Y",[null,null,null,null]]],"^13",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]],"^14",null,"^2:",3,"^15",["^Y",[null,null,null,null]],"^U",1,"^16",false,"^2<",[["^ ","^2:",3,"^16",false,"^20","^1X"],["^ ","^2:",2,"^16",false,"^20","^1X"],["^ ","^2:",1,"^16",false,"^20","^1X"],["^ ","^2:",0,"^16",false,"^20","^1X"]],"^T",228,"^V",228,"^19",3,"^1:",true,"^X",["^Y",[["^1B","^3?","^3@"],["^1B","^3?"],["^1B"],[]]]],"~$query-inputs",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",50,"^U",7,"^V",50,"^W",19,"^X",["^Y",["^Z",["^Y",[["~$fn-1"]]]]]],"^@","~$blah.impl/query-inputs","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^13",["^Y",[["^3C"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",50,"^17","~$js/RESULT","^V",50,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^3C"]]]]]],"~$transport-ch",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",139,"^U",7,"^V",139,"^W",19,"^X",["^Y",["^Z",["^Y",[["~$stream","^["]]]]],"^11","Create a transport channel from a stream channel. Receives a connected transport"],"^@","~$blah.impl/transport-ch","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",19,"^13",["^Y",[["^3G","^["]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",139,"^17","^1@","^V",139,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^3G","^["]]]]],"^11","Create a transport channel from a stream channel. Receives a connected transport"],"~$media-devices",["^ ","^@","~$blah.impl/media-devices","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",26,"^U",1,"^V",26,"^W",19,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",26,"^U",6,"^V",26,"^W",19],"^20","~$js/MediaDevices"],"~$stream-ch",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",77,"^U",7,"^V",77,"^W",16,"^X",["^Y",["^Z",["^Y",[["^1B"]]]]]],"^@","~$blah.impl/stream-ch","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",16,"^13",["^Y",[["^1B"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",77,"^17","^1@","^V",77,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1B"]]]]]],"~$processor-url",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",113,"^U",7,"^V",113,"^W",20,"^X",["^Y",["^Z",["^Y",[[]]]]]],"^@","~$blah.impl/processor-url","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",20,"^13",["^Y",[[]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",113,"^17","~$js","^V",113,"^19",0,"^1:",true,"^X",["^Y",["^Z",["^Y",[[]]]]]],"~$init-transport",["^ ","^Q",null,"^R",["^ ","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^T",131,"^U",7,"^V",131,"^W",21,"^X",["^Y",["^Z",["^Y",[["~$ch","^[","^10"]]]]]],"^@","~$blah.impl/init-transport","^S","/Users/brian/projects/blah/src/blah/impl.cljs","^W",21,"^13",["^Y",[["^3R","^[","^10"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",131,"^17","^1@","^V",131,"^19",3,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^3R","^[","^10"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^?",["~:closed","~:media-stream","~:device-id","~:ended","~:group-id","~:recur","~:source","~:node","~:data-ch","~:reason","~:label","~:kind","~:context","~:error","^2I","^["]],"~:order",["^3Z","^40","^47","^46","^41","^43","^42","^48","^3Y","^45","^49","^3[","^3X","^44","^2I","^["]],"^11","The implementation details of blah can be broken down into four concepts:\n   \n   1. Inputs\n   2. Streams\n   3. Transports\n   4. Sessions\n   \n   They feed into one another: Input -> Stream -> Transport -> Session\n   \n   Inputs are audio inputs specifically. In the land of JavaScript they are represented as \"devices\" returned\n   by navigator.mediaDevices.enumerarteDevices()\n   \n   Streams represent a js MediaStream that is the result of asking a user for permission to gather audio on an Input.\n   \n   Transports are mechanisms for doing something with the underlying MediaStream. It facilitates getting audio data out of\n   a Stream and into a usable format. For now this is backed by an audio worklet that transports audio data over a port via postMessage(),\n   but it could also support something like the MediaStream Recording API if realtime access to audio data isn't a concern.\n   \n   Finally, Sessions are used to glue all these concepts into a single point. It represents the act of asking for permission to create a Stream\n   backed by a Input then consuming that data over a Transport. All data from the Transport can be accessed over a Session using core.async mechanics."]